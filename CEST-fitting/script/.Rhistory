PACKAGES <- readRDS("C:/Users/berna/Downloads/PACKAGES.rds")
View(PACKAGES)
View(PACKAGES)
PACKAGES
clear
clc
clear
file <- file.choose()
readRDS()
readRDS(file = file)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("bayesplot")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install_cmdstan()
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
check_cmdstan_toolchain()
install_cmdstan(cores = 4)
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
check_cmdstan_toolchain()
install_cmdstan(cores = 4)
install_cmdstan(cores = 4, overwrite = TRUE)
cmdstan_path()
cmdstan_version()
file <- file.path(cmdstan_path(), "examples","bernoulli","bernoulli.stan")
mod <- cmdstan_model(file)
mod$print
mod$exe_file()
mod$print()
# names correspond to the data block in the Stan program
data_list <- list(N = 10, y = c(0,1,0,0,0,0,0,0,0,1))
fit <- mod$sample(
data = data_list,
seed = 123,
chains = 4,
parallel_chains = 4,
refresh = 500 # print update every 500 iters
)
$sample
fit$summary()
mcmc_hist(fit$draw("theta"))
library(posterior)
library(bayesplot)
color_scheme_set("brightblue")
mcmc_hist(fit$draw("theta"))
# default is a 3-D draws_array object from the posterior package
# iterations x chains x variables
draws_arr <- fit$draws() # or format="array"
str(draws_arr)
# draws x variables data frame
draws_df <- fit$draws(format = "df")
str(draws_df)
# this should be identical to draws_df created via draws(format = "df")
draws_df_2 <- as_draws_df(draws_arr)
identical(draws_df, draws_df_2)
mcmc_hist(fit$draws("theta"))
A = [2,2;3,4]
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages(bayesplot)
installed.packages(bayesplot)
installed.packages(rstan)
library(rstan)
detach("package:rstan", unload = TRUE)
library(bayesplot)
install.packages("bayesplot")
install.packages("bayesplot")
installed.packages("rstan")
installed.packages("bayesplot")
require(rstan)
require(bayesplot)
require(parallel)
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
fit <- readRDS(rds_file)
fit$save_object(file = rds_file)
rds_file <- file.path(outDir, paste(modelName, "_fit.RDS", sep = ""))
library(cmdstanr)
library(posterior)
library(bayesplot)
library(ggplot2)
color_scheme_set("darkgray")
bayesplot_theme_set(new = theme_gray())
modelName <- "CEST"
setwd("~/Weizmann/rotation-1/CEST-fitting/script")
scriptDir <- getwd()
projectDir <- dirname(scriptDir)
figDir <- file.path(projectDir, "deliv", "figure", modelName)
tabDir <- file.path(projectDir, "deliv", "table", modelName)
dataDir <- file.path(projectDir, "data", "derived")
modelDir <- file.path(projectDir, "model")
outDir <- file.path(modelDir, modelName)
rds_file <- file.path(outDir, paste(modelName, "_fit.RDS", sep = ""))
fit <- readRDS(rds_file)
fit$profiles()
fit$profiles()
profile <- fit$profiles()
View(profile)
rm(list = ls())
gc()
# Load libraries
library(cmdstanr)
library(posterior)
library(bayesplot)
library(ggplot2)
color_scheme_set("darkgray")
bayesplot_theme_set(new = theme_gray())
modelName <- "CEST"
setwd("~/Weizmann/rotation-1/CEST-fitting/script")
scriptDir <- getwd()
projectDir <- dirname(scriptDir)
figDir <- file.path(projectDir, "deliv", "figure", modelName)
tabDir <- file.path(projectDir, "deliv", "table", modelName)
dataDir <- file.path(projectDir, "data", "derived")
modelDir <- file.path(projectDir, "model")
outDir <- file.path(modelDir, modelName)
# Model Configuration -----------------------------------------------------
stan_file <- file.path(modelDir, paste(modelName, ".stan", sep = ""))
mod <- cmdstan_model(stan_file, compile = FALSE)
# Before compiling a stan model, check syntax for improvement with:
mod$check_syntax(pedantic = TRUE)
mod$compile(stanc_options = list("O1"))
Xdata <- read.csv(file.path(dataDir, "LP30_323.csv"),header = FALSE)
xZ = with(Xdata,V1)
Z = with(Xdata,V2)
# Create data set
data_list <- list(
N = length(xZ),
R1a = 8,
R2a = 393,
w1 = 500,
dw = -260,
tp = 0.2,
xZ = xZ,
Z = Z
)
# Specify initial estimates
init_estimates = function() list(
R1b_unif = runif(n=1, min=0, max=1),
R2b_std = runif(n=1, min=0, max=1),
f_unif = runif(n=1, min=0, max=1),
k_unif = runif(n=1, min=0, max=1),
sigma_unif = runif(n=1, min=0, max=1)
)
fit <- mod$sample(
data = data_list,
chains = 4,
parallel_chains = 4,
init = init_estimates,
)
