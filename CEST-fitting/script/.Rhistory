# we recommend running this is a fresh R session or restarting your current session
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
library(cmdstanr)
set_cmdstan_path()
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
set_cmdstan_path()
install_cmdstan()
library(cmdstanr)
library(posterior)
library(bayesplot)
library(ggplot2)
color_scheme_set("red")
bayesplot_theme_set(new = theme_default())
modelName <- "CEST"
setwd("~/Weizmann/rotation-1/CEST-fitting/script")
scriptDir <- getwd()
projectDir <- dirname(scriptDir)
figDir <- file.path(projectDir, "deliv", "figure", modelName)
tabDir <- file.path(projectDir, "deliv", "table", modelName)
dataDir <- file.path(projectDir, "data", "derived")
modelDir <- file.path(projectDir, "model")
outDir <- file.path(modelDir, modelName)
stan_file <- file.path(modelDir, paste(modelName, ".stan", sep = ""))
mod <- cmdstan_model(stan_file, compile = FALSE)
# Before compiling a stan model, check syntax for improvement with:
mod$check_syntax(pedantic = TRUE)
stan_file <- file.path(modelDir, paste(modelName, ".stan", sep = ""))
mod <- cmdstan_model(stan_file, compile = FALSE)
# Before compiling a stan model, check syntax for improvement with:
mod$check_syntax(pedantic = TRUE)
stan_file <- file.path(modelDir, paste(modelName, ".stan", sep = ""))
mod <- cmdstan_model(stan_file, compile = FALSE)
# Before compiling a stan model, check syntax for improvement with:
mod$check_syntax(pedantic = TRUE)
stan_file <- file.path(modelDir, paste(modelName, ".stan", sep = ""))
mod <- cmdstan_model(stan_file, compile = FALSE)
# Before compiling a stan model, check syntax for improvement with:
mod$check_syntax(pedantic = TRUE)
mod$compile(stanc_options = list("O1"))
Xdata <- read.csv(file.path(dataDir, "LP30_323_500.csv"),header = FALSE)
xZ = with(Xdata,V1)
Z = with(Xdata,V2)
# Specify current experiment name. e.g. 'LP30_323_500_{sim/exp}'
# for Material: LP30, temperature: 323K, w1: 500Hz
expName <- "LP30_323_500_exp"
# Create data set
data_list <- list(
N = length(xZ),
R1a = 8,
R2a = 393,
w1 = 500,
dw = -260,
tp = 0.2,
xZ = xZ,
Z = Z
)
# Specify initial estimates
init_estimates = function() list(
R1b_unif = runif(n=1, min=0, max=1),
R2b_std = runif(n=1, min=0, max=1),
f_unif = runif(n=1, min=0, max=1),
k_unif = runif(n=1, min=0, max=1),
sigma_unif = runif(n=1, min=0, max=1)
)
rds_file <- file.path(outDir, paste(expName, "_fit.RDS", sep = ""))
fit <- readRDS(rds_file)
pars_to_fit <- c("R1b", "R2b", "f", "k")
posterior <- as.array(fit$draws())
Z_rep <- as_draws_matrix(fit$draws("Z_rep"), .nchains = 1)
ppc_scatter_avg(Z,Z_rep)
