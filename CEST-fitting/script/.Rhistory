PACKAGES <- readRDS("C:/Users/berna/Downloads/PACKAGES.rds")
View(PACKAGES)
View(PACKAGES)
PACKAGES
clear
clc
clear
file <- file.choose()
readRDS()
readRDS(file = file)
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies = TRUE)
install.packages("bayesplot")
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install_cmdstan()
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
check_cmdstan_toolchain()
install_cmdstan(cores = 4)
library(cmdstanr)
check_cmdstan_toolchain(fix = TRUE, quiet = TRUE)
check_cmdstan_toolchain()
install_cmdstan(cores = 4)
install_cmdstan(cores = 4, overwrite = TRUE)
cmdstan_path()
cmdstan_version()
file <- file.path(cmdstan_path(), "examples","bernoulli","bernoulli.stan")
mod <- cmdstan_model(file)
mod$print
mod$exe_file()
mod$print()
# names correspond to the data block in the Stan program
data_list <- list(N = 10, y = c(0,1,0,0,0,0,0,0,0,1))
fit <- mod$sample(
data = data_list,
seed = 123,
chains = 4,
parallel_chains = 4,
refresh = 500 # print update every 500 iters
)
$sample
fit$summary()
mcmc_hist(fit$draw("theta"))
library(posterior)
library(bayesplot)
color_scheme_set("brightblue")
mcmc_hist(fit$draw("theta"))
# default is a 3-D draws_array object from the posterior package
# iterations x chains x variables
draws_arr <- fit$draws() # or format="array"
str(draws_arr)
# draws x variables data frame
draws_df <- fit$draws(format = "df")
str(draws_df)
# this should be identical to draws_df created via draws(format = "df")
draws_df_2 <- as_draws_df(draws_arr)
identical(draws_df, draws_df_2)
mcmc_hist(fit$draws("theta"))
A = [2,2;3,4]
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("StanHeaders", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages("rstan", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
install.packages(bayesplot)
installed.packages(bayesplot)
installed.packages(rstan)
library(rstan)
detach("package:rstan", unload = TRUE)
library(bayesplot)
install.packages("bayesplot")
install.packages("bayesplot")
installed.packages("rstan")
installed.packages("bayesplot")
require(rstan)
require(bayesplot)
require(parallel)
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
modelName <- "CEST_multi_data_sets_map_rect"
setwd("~/Weizmann/rotation-1/CEST-fitting/script")
scriptDir <- getwd()
projectDir <- dirname(scriptDir)
figDir <- file.path(projectDir, "deliv", "figure", modelName)
tabDir <- file.path(projectDir, "deliv", "table", modelName)
dataDir <- file.path(projectDir, "data", "derived")
modelDir <- file.path(projectDir, "model")
outDir <- file.path(modelDir, modelName)
dir.create(file.path(modelDir, modelName), showWarnings = FALSE)
dir.create(file.path(figDir, modelName), showWarnings = FALSE)
dir.create(file.path(tabDir, modelName), showWarnings = FALSE)
Xdata <- read.csv(file.path(dataDir, "LP30_dendrotes_CEST_exp_fit.csv"),header = FALSE, skip = 3)
class(Xdata)
Xdata
mat_data <- as.matrix(Xdata)
mat_data
class(mat_data)
mat_num <- apply(as.matrix.noquote(Xdata),2,as.numeric)
mat_num
abind(x=1:4,y=5:8)
library(abind)
abind(x=1:4,y=5:8)
Xdata <- read.csv(file.path(dataDir, "LP30_dendrotes_CEST_exp_fit.csv"),header = FALSE, skip = 3)
class(Xdata)
View(Xdata)
xZ = Xdata[,1]
Z = Xdata[,-1]
Z = c(Xdata[,-1])
View(Z)
xZ
Z
class(Z)
class(xZ)
Z = Xdata[,-1]
class(Z)
Z = as.vector(Xdata[,-1])
Z_pre = as.matrix(sapply(Xdata[,-1], as.mumeric))
Z_pre = as.matrix(sapply(Xdata[,-1], as.numeric))
Z = c(Z_pre)
Xdata <- read.csv(file.path(dataDir, "LP30_dendrotes_CEST_exp_fit.csv"),header = FALSE, skip = 3)
xZ = Xdata[,1] * 16.546 * 9.4; # Convert from ppm to Hz and Lithium.
Z = c(as.matrix(sapply(Xdata[,-1], as.numeric)))
Z
